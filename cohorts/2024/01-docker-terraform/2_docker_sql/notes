services:
	postgres:
		image: postgres:13
		environment:
			POSTGRES_USER: airflow
			POSTGRES_PASSWORD: airflow
			POSTGRES_DB: airflow
		volumes:
			- postgres-db-volume:/var/lib/postgresql/data
		healthcheck:
			test: ["CMD", "pg_isready", "-U", "airflow"]
			interval: 5s
			retries: 5
		restart: always

# windows method
docker run -it \
	-e POSTGRES_USER="root" \
  	-e POSTGRES_PASSWORD="root" \
  	-e POSTGRES_DB="ny_taxi" \
	-v c:/Users/ktzhu/code/python_code/data-engineering-zoomcamp/cohorts/2024/01-docker-terraform/2_docker_sql/ny_taxi_postgres_data:/var/lib/postgresql/data \
	-p 5432:5432 \
postgres:13 \

docker run -it \
	-e POSTGRES_USER="root" \
  -e POSTGRES_PASSWORD="root" \
  -e POSTGRES_DB="ny_taxi" \
	-v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data \
	-p 5432:5432 \
	postgres:13

https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page
https://www.nyc.gov/assets/tlc/downloads/pdf/data_dictionary_trip_records_yellow.pdf

# create network
docker network create pg-network

# Run Postgres with network
docker run -it \
	-e POSTGRES_USER="root" \
  -e POSTGRES_PASSWORD="root" \
  -e POSTGRES_DB="ny_taxi" \
	-v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data \
	-p 5432:5432 \
	--network=pg-network \
	--name=pg-database \
	postgres:13

# Run PgAdmin with network
docker run -it \
  -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
  -e PGADMIN_DEFAULT_PASSWORD="root" \
  -p 8080:80 \
	--network=pg-network \
	--name=pgadmin \
  dpage/pgadmin4

# how to pull pgadmin image
docker pull dpage/pgadmin4:<tag name>

URL="https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet"

# run data pipeline script
python ingest_data.py \
    --user=root \
    --password=root \
    --host=localhost \
    --port=5432 \
    --db=ny_taxi \
    --tb=yellow_taxi_trips \
		--url=${URL}

# build docker image from dockerfile
docker build -t taxi_ingest:v001 .

# run docker container
docker run -it \
		--network=pg-network \
		taxi_ingest:v001 \
    --user=root \
    --password=root \
    --host=pg-database \
    --port=5432 \
    --db=ny_taxi \
    --tb=yellow_taxi_trips \
		--url=${URL}

select
	tpep_pickup_datetime,
	tpep_dropoff_datetime,
	total_amount,
	concat(zpu."Borough", ' / ', zpu.'Zone') as 'pick_up_loc',
	concat(zdo."Borough", ' / ', zdo.'Zone') as 'drop_off_loc'
from yellow_taxi_trips t,
	zones zpu,
	zones zdo
where
	t."PULocationID" = zpu."LocationID" and
	t."DOLocationID" = zdo."LocationID"
limit 100;